{"version":3,"sources":["index.js"],"names":["Cell","props","className","onClick","text","ReactDOM","render","React","useState","cells","setCells","finished","setFinished","n","setN","winner","setWinner","onClickCell","row","col","copy","JSON","parse","stringify","i","j","tell","map","items","item","document","getElementById"],"mappings":"2NAIMA,G,MAAO,SAASC,GACpB,OACE,yBAAKC,UAAU,OAAOC,QAASF,EAAME,SAClCF,EAAMG,QA2FbC,IAASC,OACP,6BACE,mBAxFe,WAAY,IAAD,EACFC,IAAMC,SAAS,CACvC,CAAC,KAAM,KAAM,MACb,CAAC,KAAM,KAAM,MACb,CAAC,KAAM,KAAM,QAJa,mBACrBC,EADqB,KACdC,EADc,OAMIH,IAAMC,UAAS,GANnB,mBAMrBG,EANqB,KAMXC,EANW,OAOVL,IAAMC,SAAS,GAPL,mBAOrBK,EAPqB,KAOlBC,EAPkB,OAQAP,IAAMC,WARN,mBAQrBO,EARqB,KAQbC,EARa,KAkDtBC,EAAc,SAACC,EAAKC,GACxB,IAAMC,EAAOC,KAAKC,MAAMD,KAAKE,UAAUd,IAChB,OAAnBW,EAAKF,GAAKC,KACZL,EAAKD,EAAI,GACTO,EAAKF,GAAKC,GAAON,EAAI,IAAM,EAAI,IAAM,IACrCH,EAASU,GA9CA,SAAAX,GACX,IAAK,IAAIe,EAAI,EAAGA,EAAI,EAAGA,IACrB,GACEf,EAAMe,GAAG,KAAOf,EAAMe,GAAG,IACzBf,EAAMe,GAAG,KAAOf,EAAMe,GAAG,IACT,OAAhBf,EAAMe,GAAG,GACT,CACAR,EAAUP,EAAMe,GAAG,IACnBZ,GAAY,GACZ,MAGJ,IAAK,IAAIa,EAAI,EAAGA,EAAI,EAAGA,IACrB,GACEhB,EAAM,GAAGgB,KAAOhB,EAAM,GAAGgB,IACzBhB,EAAM,GAAGgB,KAAOhB,EAAM,GAAGgB,IACT,OAAhBhB,EAAM,GAAGgB,GACT,CACAT,EAAUP,EAAM,GAAGgB,IACnBb,GAAY,GACZ,MAIFH,EAAM,GAAG,KAAOA,EAAM,GAAG,IACzBA,EAAM,GAAG,KAAOA,EAAM,GAAG,IACT,OAAhBA,EAAM,GAAG,KAETO,EAAUP,EAAM,GAAG,IACnBG,GAAY,IAGZH,EAAM,GAAG,KAAOA,EAAM,GAAG,IACzBA,EAAM,GAAG,KAAOA,EAAM,GAAG,IACT,OAAhBA,EAAM,GAAG,KAETO,EAAUP,EAAM,GAAG,IACnBG,GAAY,IAUZc,CAAKN,KAGT,OACE,yBAAKlB,UAAU,SACb,yBAAKA,UAAU,SACb,0DACQ,yBAAKA,UAAU,UAAUW,EAAI,IAAM,EAAI,IAAM,OAGvD,yBAAKX,UAAU,SACZO,EAAMkB,KAAI,SAACC,EAAOV,GAAR,OACT,yBAAKhB,UAAU,OACZ0B,EAAMD,KAAI,SAACE,EAAMV,GAAP,OACT,yBAAKjB,UAAU,OACb,kBAACF,EAAD,CAAMI,KAAMyB,EAAM1B,QAAS,kBAAMc,EAAYC,EAAKC,eAM3DR,GACC,yBAAKT,UAAU,YACb,yBAAKA,UAAU,cAAca,EAA7B,aASN,OAEFe,SAASC,eAAe,W","file":"static/js/main.394c7733.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.css\";\n\nconst Cell = function(props) {\n  return (\n    <div className=\"cell\" onClick={props.onClick}>\n      {props.text}\n    </div>\n  );\n};\n\nconst Chessboard = function() {\n  const [cells, setCells] = React.useState([\n    [null, null, null],\n    [null, null, null],\n    [null, null, null]\n  ]);\n  const [finished, setFinished] = React.useState(false);\n  const [n, setN] = React.useState(0);\n  const [winner, setWinner] = React.useState();\n  const tell = cells => {\n    for (let i = 0; i < 3; i++) {\n      if (\n        cells[i][0] === cells[i][1] &&\n        cells[i][1] === cells[i][2] &&\n        cells[i][0] !== null\n      ) {\n        setWinner(cells[i][0]);\n        setFinished(true);\n        break;\n      }\n    }\n    for (let j = 0; j < 3; j++) {\n      if (\n        cells[0][j] === cells[1][j] &&\n        cells[1][j] === cells[2][j] &&\n        cells[0][j] !== null\n      ) {\n        setWinner(cells[0][j]);\n        setFinished(true);\n        break;\n      }\n    }\n    if (\n      cells[0][0] === cells[1][1] &&\n      cells[1][1] === cells[2][2] &&\n      cells[0][0] !== null\n    ) {\n      setWinner(cells[0][0]);\n      setFinished(true);\n    }\n    if (\n      cells[0][2] === cells[1][1] &&\n      cells[1][1] === cells[2][0] &&\n      cells[0][2] !== null\n    ) {\n      setWinner(cells[0][2]);\n      setFinished(true);\n    }\n  };\n\n  const onClickCell = (row, col) => {\n    const copy = JSON.parse(JSON.stringify(cells));\n    if (copy[row][col] === null) {\n      setN(n + 1);\n      copy[row][col] = n % 2 === 0 ? \"x\" : \"o\";\n      setCells(copy);\n      tell(copy);\n    }\n  };\n  return (\n    <div className=\"board\">\n      <div className=\"panel\">\n        <div>\n          现在轮到 :<div className=\"player\">{n % 2 === 0 ? \"x\" : \"o\"}</div>\n        </div>\n      </div>\n      <div className=\"chess\">\n        {cells.map((items, row) => (\n          <div className=\"row\">\n            {items.map((item, col) => (\n              <div className=\"col\">\n                <Cell text={item} onClick={() => onClickCell(row, col)} />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n      {finished && (\n        <div className=\"gameOver\">\n          <div className=\"winnerText\">{winner} win!</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nReactDOM.render(\n  <div>\n    <Chessboard />\n  </div>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}